spring.datasource.url=jdbc:mysql://localhost/hr-application-spring
#spring.datasource.username=pelatihanuser
#spring.datasource.password=pelatihanpassword
spring.datasource.username=root
spring.datasource.password=C0b4dib4c4

spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#using spring.jpa.properties.* (the prefix is stripped before adding them to the entity manager). Example:
#spring.jpa.properties.hibernate.globally_quoted_identifiers=true

logging.level.org.springframework.web=ERROR
#logging.level.ari.com.hr.application.dao=DEBUG
logging.level.ari.com.hr.application=DEBUG
logging.level.org.hibernate=ERROR
#logging.level.org.springframework.web=INFO
#logging.file=logs/spring-boot-logging.log
log4j.logger.org.thymeleaf=ERROR

#Handle Error :
#ould not write content: No serializer found for class org.hibernate.proxy.pojo.javassist.JavassistLazyInitializer 
#and no properties discovered to create BeanSerializer (to avoid exception, 
#disable SerializationFeature.FAIL_ON_EMPTY_BEANS)
#spring.jackson.serialization.fail-on-empty-beans=false

spring.freemarker.template-loader-path: /
spring.freemarker.suffix: .html

spring.template.cache=false
spring.freemarker.cache=false

#spring.template.cache=false
#spring.thymeleaf.cache=false
#spring.thymeleaf.mode=LEGACYHTML5
#spring.thymeleaf.mode: HTML
#spring.thymeleaf.template-loader-path: /
#spring.thymeleaf.suffix: .html